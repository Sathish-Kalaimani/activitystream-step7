2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( usercircle0_.username {synthetic-alias} username ) ) ( FromClause{level=1} user_circle usercircle0_ ) ( where ( = ( usercircle0_.circle_name {synthetic-alias} circleName ) ? ) ) )
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [user_circle usercircle0_]
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_circle)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'usercircle0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=usercircle0_,className=com.stackroute.activitystream.model.UserCircle,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[usercircle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_circle usercircle0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_circle,tableAlias=usercircle0_,origin=null,columns={,className=com.stackroute.activitystream.model.UserCircle}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'usercircle0_.circle_name' {propertyName=circleName,dereferenceType=PRIMITIVE,getPropertyPath=circleName,path={synthetic-alias}.circleName,tableAlias=usercircle0_,className=com.stackroute.activitystream.model.UserCircle,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'circleName' {originalText=circleName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=circleName, expectedType=org.hibernate.type.StringType@2ee92e7d}

2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select username from com.stackroute.activitystream.model.UserCircle where circleName = :circleName
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select usercircle0_.username as col_0_0_ from user_circle usercircle0_ where usercircle0_.circle_name=?
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-10 23:02:48 [main] DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method getUsernameAndCircleName
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.stackroute.activitystream.model.UserCircle where username = :username and circleName =:circleName
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'stackroute'
    |           |  |  \-[IDENT] Node: 'activitystream'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserCircle'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'username'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'circleName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'circleName'

2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2018-04-10 23:02:48 [main] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.stackroute.activitystream.model.UserCircle (<no alias>) -> usercircle0_
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@2ee92e7d
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.username -> usercircle0_.username
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : circleName -> org.hibernate.type.StringType@2ee92e7d
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.circleName -> usercircle0_.circle_name
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} user_circle usercircle0_ ) ( where ( and ( = ( usercircle0_.username {synthetic-alias} username ) ? ) ( = ( usercircle0_.circle_name {synthetic-alias} circleName ) ? ) ) ) )
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [user_circle usercircle0_]
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_circle)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'usercircle0_.user_circle_id as user_cir1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_circle,tableAlias=usercircle0_,origin=null,columns={,className=com.stackroute.activitystream.model.UserCircle}}}
    |  \-[SQL_TOKEN] SqlFragment: 'usercircle0_.circle_name as circle_n2_2_, usercircle0_.username as username3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[usercircle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_circle usercircle0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_circle,tableAlias=usercircle0_,origin=null,columns={,className=com.stackroute.activitystream.model.UserCircle}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'usercircle0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=usercircle0_,className=com.stackroute.activitystream.model.UserCircle,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@2ee92e7d}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'usercircle0_.circle_name' {propertyName=circleName,dereferenceType=PRIMITIVE,getPropertyPath=circleName,path={synthetic-alias}.circleName,tableAlias=usercircle0_,className=com.stackroute.activitystream.model.UserCircle,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'circleName' {originalText=circleName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=circleName, expectedType=org.hibernate.type.StringType@2ee92e7d}

2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.stackroute.activitystream.model.UserCircle where username = :username and circleName =:circleName
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select usercircle0_.user_circle_id as user_cir1_2_, usercircle0_.circle_name as circle_n2_2_, usercircle0_.username as username3_2_ from user_circle usercircle0_ where usercircle0_.username=? and usercircle0_.circle_name=?
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-10 23:02:48 [main] DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method findCircleNameByUserName
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select circleName from com.stackroute.activitystream.model.UserCircle where username = :username
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[DOT] Node: '.'
    |  |        |  |  |  +-[IDENT] Node: 'com'
    |  |        |  |  |  \-[IDENT] Node: 'stackroute'
    |  |        |  |  \-[IDENT] Node: 'activitystream'
    |  |        |  \-[IDENT] Node: 'model'
    |  |        \-[IDENT] Node: 'UserCircle'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'circleName'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2018-04-10 23:02:48 [main] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.stackroute.activitystream.model.UserCircle (<no alias>) -> usercircle0_
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : circleName -> org.hibernate.type.StringType@2ee92e7d
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.circleName -> usercircle0_.circle_name
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@2ee92e7d
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.username -> usercircle0_.username
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( usercircle0_.circle_name {synthetic-alias} circleName ) ) ( FromClause{level=1} user_circle usercircle0_ ) ( where ( = ( usercircle0_.username {synthetic-alias} username ) ? ) ) )
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [user_circle usercircle0_]
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_circle)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'usercircle0_.circle_name' {propertyName=circleName,dereferenceType=PRIMITIVE,getPropertyPath=circleName,path={synthetic-alias}.circleName,tableAlias=usercircle0_,className=com.stackroute.activitystream.model.UserCircle,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'circleName' {originalText=circleName}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[usercircle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_circle usercircle0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_circle,tableAlias=usercircle0_,origin=null,columns={,className=com.stackroute.activitystream.model.UserCircle}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'usercircle0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=usercircle0_,className=com.stackroute.activitystream.model.UserCircle,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@2ee92e7d}

2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select circleName from com.stackroute.activitystream.model.UserCircle where username = :username
2018-04-10 23:02:48 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select usercircle0_.circle_name as col_0_0_ from user_circle usercircle0_ where usercircle0_.username=?
2018-04-10 23:02:48 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-10 23:02:48 [main] DEBUG o.s.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@6968bb65]
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'userCircleRepository'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userCircleServiceImpl' to bean named 'userCircleRepository'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'userCircleServiceImpl'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userCircleController' to bean named 'userCircleServiceImpl'
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.annotation.InjectionMetadata - Processing injected element of bean 'userCircleController': AutowiredFieldElement for private com.stackroute.activitystream.model.UserCircle com.stackroute.activitystream.controller.UserCircleController.userCircle
2018-04-10 23:02:48 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userCircle'
