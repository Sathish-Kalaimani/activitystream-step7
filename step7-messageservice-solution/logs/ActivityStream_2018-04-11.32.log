2018-04-11 13:35:46 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#177068db'
2018-04-11 13:35:46 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#6b103db7'
2018-04-11 13:35:46 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2018-04-11 13:35:46 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
2018-04-11 13:35:46 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2018-04-11 13:35:46 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2018-04-11 13:35:46 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#6b103db7'
2018-04-11 13:35:46 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jpaMappingContext'
2018-04-11 13:35:46 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'messageRepository'
2018-04-11 13:35:46 [main] DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2018-04-11 13:35:46 [main] DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2018-04-11 13:35:46 [main] DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2018-04-11 13:35:46 [main] DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2018-04-11 13:35:46 [main] DEBUG o.s.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource@6604f246
2018-04-11 13:35:46 [main] DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2018-04-11 13:35:46 [main] DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2018-04-11 13:35:46 [main] DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method listAllTags
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct tag from com.stackroute.activitystream.model.UserTag
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     \-[DOT] Node: '.'
       |        +-[DOT] Node: '.'
       |        |  +-[DOT] Node: '.'
       |        |  |  +-[DOT] Node: '.'
       |        |  |  |  +-[IDENT] Node: 'com'
       |        |  |  |  \-[IDENT] Node: 'stackroute'
       |        |  |  \-[IDENT] Node: 'activitystream'
       |        |  \-[IDENT] Node: 'model'
       |        \-[IDENT] Node: 'UserTag'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[IDENT] Node: 'tag'

2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2018-04-11 13:35:46 [main] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.stackroute.activitystream.model.UserTag (<no alias>) -> usertag0_
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : tag -> org.hibernate.type.StringType@677cb96e
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.tag -> usertag0_.tag
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct ( usertag0_.tag {synthetic-alias} tag ) ) ( FromClause{level=1} usertag usertag0_ ) )
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [usertag usertag0_]
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (usertag)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[DOT] DotNode: 'usertag0_.tag' {propertyName=tag,dereferenceType=PRIMITIVE,getPropertyPath=tag,path={synthetic-alias}.tag,tableAlias=usertag0_,className=com.stackroute.activitystream.model.UserTag,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'tag' {originalText=tag}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[usertag0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'usertag usertag0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=usertag,tableAlias=usertag0_,origin=null,columns={,className=com.stackroute.activitystream.model.UserTag}}

2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct tag from com.stackroute.activitystream.model.UserTag
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct usertag0_.tag as col_0_0_ from usertag usertag0_
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-11 13:35:46 [main] DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method getMessagesFromUser
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.stackroute.activitystream.model.Message where (senderName= :username and  receiverId= :otherUsername) or (receiverId= :username and senderName= :otherUsername)
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'stackroute'
    |           |  |  \-[IDENT] Node: 'activitystream'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Message'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'senderName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'username'
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'receiverId'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'otherUsername'
          \-[AND] Node: 'and'
             +-[EQ] Node: '='
             |  +-[IDENT] Node: 'receiverId'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'username'
             \-[EQ] Node: '='
                +-[IDENT] Node: 'senderName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'otherUsername'

2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2018-04-11 13:35:46 [main] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.stackroute.activitystream.model.Message (<no alias>) -> message0_
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : senderName -> org.hibernate.type.StringType@677cb96e
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.senderName -> message0_.sender_name
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : receiverId -> org.hibernate.type.StringType@677cb96e
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.receiverId -> message0_.receiver_id
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : receiverId -> org.hibernate.type.StringType@677cb96e
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.receiverId -> message0_.receiver_id
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : senderName -> org.hibernate.type.StringType@677cb96e
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.senderName -> message0_.sender_name
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} message message0_ ) ( where ( or ( and ( = ( message0_.sender_name {synthetic-alias} senderName ) ? ) ( = ( message0_.receiver_id {synthetic-alias} receiverId ) ? ) ) ( and ( = ( message0_.receiver_id {synthetic-alias} receiverId ) ? ) ( = ( message0_.sender_name {synthetic-alias} senderName ) ? ) ) ) ) )
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [message message0_]
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (message)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'message0_.message_id as message_1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=message,tableAlias=message0_,origin=null,columns={,className=com.stackroute.activitystream.model.Message}}}
    |  \-[SQL_TOKEN] SqlFragment: 'message0_.circle_name as circle_n2_1_, message0_.message as message3_1_, message0_.posted_date as posted_d4_1_, message0_.receiver_id as receiver5_1_, message0_.sender_name as sender_n6_1_, message0_.stream_type as stream_t7_1_, message0_.tag as tag8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[message0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'message message0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=message,tableAlias=message0_,origin=null,columns={,className=com.stackroute.activitystream.model.Message}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'message0_.sender_name' {propertyName=senderName,dereferenceType=PRIMITIVE,getPropertyPath=senderName,path={synthetic-alias}.senderName,tableAlias=message0_,className=com.stackroute.activitystream.model.Message,classAlias=null}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'senderName' {originalText=senderName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@677cb96e}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'message0_.receiver_id' {propertyName=receiverId,dereferenceType=PRIMITIVE,getPropertyPath=receiverId,path={synthetic-alias}.receiverId,tableAlias=message0_,className=com.stackroute.activitystream.model.Message,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'receiverId' {originalText=receiverId}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=otherUsername, expectedType=org.hibernate.type.StringType@677cb96e}
          \-[AND] SqlNode: 'and'
             +-[EQ] BinaryLogicOperatorNode: '='
             |  +-[DOT] DotNode: 'message0_.receiver_id' {propertyName=receiverId,dereferenceType=PRIMITIVE,getPropertyPath=receiverId,path={synthetic-alias}.receiverId,tableAlias=message0_,className=com.stackroute.activitystream.model.Message,classAlias=null}
             |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  |  \-[IDENT] IdentNode: 'receiverId' {originalText=receiverId}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@677cb96e}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'message0_.sender_name' {propertyName=senderName,dereferenceType=PRIMITIVE,getPropertyPath=senderName,path={synthetic-alias}.senderName,tableAlias=message0_,className=com.stackroute.activitystream.model.Message,classAlias=null}
                |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
                |  \-[IDENT] IdentNode: 'senderName' {originalText=senderName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=otherUsername, expectedType=org.hibernate.type.StringType@677cb96e}

2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.stackroute.activitystream.model.Message where (senderName= :username and  receiverId= :otherUsername) or (receiverId= :username and senderName= :otherUsername)
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select message0_.message_id as message_1_1_, message0_.circle_name as circle_n2_1_, message0_.message as message3_1_, message0_.posted_date as posted_d4_1_, message0_.receiver_id as receiver5_1_, message0_.sender_name as sender_n6_1_, message0_.stream_type as stream_t7_1_, message0_.tag as tag8_1_ from message message0_ where message0_.sender_name=? and message0_.receiver_id=? or message0_.receiver_id=? and message0_.sender_name=?
2018-04-11 13:35:46 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2018-04-11 13:35:46 [main] DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method showMessagesWithTag
2018-04-11 13:35:46 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.stackroute.activitystream.model.Message where tag = :tag
